//#include <stdio.h>
//#include <stdlib.h>
#include <string.h>
//#include <stdint.h>
//
//#include <system.h>
//#include <sys/alt_alarm.h>
//#include <io.h>
//
//#include "fatfs.h"
//#include "diskio.h"
//
//#include "ff.h"
//#include "monitor.h"
//#include "uart.h"
//
//#include "alt_types.h"
//
//#include <altera_up_avalon_audio.h>
//#include <altera_up_avalon_audio_and_video_config.h>

// Type definitions
typedef struct{
	char *filename;
	unsigned long size;
} SongFile;

// Globals
SongFile songs[20];

static void put_rc(FRESULT rc) {
    const char *str =
        "OK\0" "DISK_ERR\0" "INT_ERR\0" "NOT_READY\0" "NO_FILE\0" "NO_PATH\0"
        "INVALID_NAME\0" "DENIED\0" "EXIST\0" "INVALID_OBJECT\0" "WRITE_PROTECTED\0"
        "INVALID_DRIVE\0" "NOT_ENABLED\0" "NO_FILE_SYSTEM\0" "MKFS_ABORTED\0" "TIMEOUT\0"
        "LOCKED\0" "NOT_ENOUGH_CORE\0" "TOO_MANY_OPEN_FILES\0";
    FRESULT i;

    for (i = 0; i != rc && *str; i++) {
        while (*str++);
    }
    xprintf("rc=%u FR_%s\n", (uint32_t) rc, str);
}

// Checks a filename if it is a vaild .wav filename
int isWav(const char *filename){
  const char *suffix = ".wav"; // Length of 4
  const size_t suffixlen = 4;

  if(!filename){
    return 0; // filename is null
  }

  size_t namelen = strlen(filename);
  return strncmp(filename + namelen - suffixlen, suffix, suffixlen) == 0;
}

int loadSongs(char *dirName){
	// read the file
	FILINFO fileInfo;
	DIR dir;

	int res;
	if(res = f_opendir(&dir, dirName)){
		xprintf(res);
		return res;
	}

	for(;;){
		int res = f_readdir(&Dir, &Finfo);
		if ((res != FR_OK) || !Finfo.fname[0])
			return 1; // Error



	}



	// print track number and file name on lcd
	//LCDprint(trackNumber, Finfo.fname[0]);
	return 0;
}

int LCDprint(int trackNumber, TCHAR fname) {
	// open the lcd
	FILE *lcd = fopen("/dev/lcd_display", "w");
	if (lcd == NULL)
		return 1; // error opening the lcd

	fprintf(lcd, "%d %s", trackNumber, fname);
	fclose(lcd);
}

//int main()


